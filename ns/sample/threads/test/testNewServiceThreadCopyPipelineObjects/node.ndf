<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">flow</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
      </list>
      <value name="rec_closed">false</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">PO</value>
          <value name="field_type">recref</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
          <value name="rec_closed">false</value>
          <value name="rec_ref">sample.threads.test:incomingXML</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
  </record>
  <value name="node_comment">=================================================================

     *** EXAMPLE CODE -- NOT INTENDED FOR PRODUCTION USE  ***

====================================================================

This service is an example of how the Integration Server can be used to
demonstrate how two threads can be used to sync up information with
each other via the wait and notify services.
There are a number of ways pass a pipeline to new service thread,
this example outlines the  scenario of the data each thread needs are
unique subsets of each other. As a result a a new pipeline (e.g. 'pipelet')
for each thread using IDataFactory.create() and is filled with only the
data that new thread needs to work on. For more information please see
the samples documentation located at: packages\WmSamples\pub\doc\threads-desc.htm

The service performs the following functionality:

1.	Load an XML PO with some values which need to be verified
2.	Map the XML PO to a Document structure
3.	Spawn a new service thread to join the two address lines of the
	PO into one address line
4.	Map some value to the "incoming/po/header/orderNum"
5.	Wait until the notify service will send a the new address line
6.	End the new service thread


Input description:
-none
Output description:
PO - a PO Document

This service is provided as an example of one way that you might
accomplish this task. As a member of the WmSamples package, this
service is subject to modification or removal, without notice,
in future versions of the product.

This service is not a member of the webMethods library and should
not be used in a production solution.

====================================================================
</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="check_internal_acls">no</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
</Values>
