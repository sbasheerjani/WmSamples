<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">flow</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">whateverYouWant</value>
          <value name="field_type">object</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">modifiedString</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
  </record>
  <value name="node_comment">====================================================================

     *** EXAMPLE CODE -- NOT INTENDED FOR PRODUCTION USE  ***

====================================================================

This service is the recipient of the HTTP post from sample.contentHandler.test:runContentHandler.
It inputs the byte stream posted and performs the following functionality:

1.  Calls pub.string:bytesToString to parse the input to a string
2.  Calls pub.date:getCurrentDateString to create the current date.  This is to avoid a
"smoke and mirrors" example.
3.  Calls pub.string:concat to concat the input string with a string created
by this service.
4.  Calls pub.flow:setResponse to respond to the HTTP request in a syncronous fashion.

Input:
whateverYouWant - byte array created by the content handler that was custom written

Output:
modifiedString - the string that is returned to the HTTP post from
		 sample.contentHandler.test:runContentHandler

This service is provided as an example of one way that you might
accomplish this task. As a member of the WmSamples package, this
service is subject to modification or removal, without notice,
in future versions of the product.

This service is not a member of the webMethods library and should
not be used in a production solution.

====================================================================
</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="check_internal_acls">no</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
</Values>
