<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">flow</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">OrderRequestHeader</value>
          <value name="field_type">recref</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
          <value name="rec_closed">false</value>
          <value name="rec_ref">sample.complexMapping.docTypes.cXML:docType_OrderRequestHeader</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">OrderHeader</value>
          <value name="field_type">recref</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
          <value name="rec_closed">false</value>
          <value name="rec_ref">sample.complexMapping.docTypes:OrderHeader</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
  </record>
  <value name="node_comment">====================================================================

     *** EXAMPLE CODE -- NOT INTENDED FOR PRODUCTION USE  ***

====================================================================

This service is an example using the try/catch Sequence method.  The purpose of the service is
to build the header Document of the purchase order.  The service also breaks up the elements of the
header for readability and maintenance.  Every step could be performed in one large map, but this
a best practice in webMethods' professional services group.  The service performs the following
functionality:

1.   SEQUENCE that exits on SUCCESS
1.1  SEQUENCE that exits on FAILURE.  This sequence acts as the try block in Java code.  If
an error is thrown during processing any of the steps, it is exited immediately (like Java)
and enters the other sequence step
1.1.1  MAP the initial header information.  This mapping contains a transformer service that
converts the date format from cXML's format to your internal format.  Remember that
transformers do not execute in a guaranteed order in the mapping.
1.1.2  MAP to build the ship-to Document
1.1.3  MAP to build the shipping Document
1.1.4  MAP to build the bill-to Document
1.2  SEQUENCE that exits on DONE.  This sequence acts as the catch block in Java.  If
any errors are encountered in the above sequence, they are sent to this block of code.
You can handle the error in any way you would like to as the developer.  The way done
under this sequence is just an example and should not be used in production.
1.2.1  Calls pub.flow:getLastError to get the last error that was thrown.
1.2.2  Calls pub.flow:debugLog to send it to the debug log.
1.2.3  Exits the flow.


Do not run this service directly.  To run the example, you must execute the
sample.complexMapping.largeDoc.test:runComplexMapping service.

This service is provided as an example of one way that you might
accomplish this task. As a member of the WmSamples package, this
service is subject to modification or removal, without notice,
in future versions of the product.

This service is not a member of the webMethods library and should
not be used in a production solution.

====================================================================
</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="template_type">html</value>
  <value name="audit_level">off</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
</Values>
