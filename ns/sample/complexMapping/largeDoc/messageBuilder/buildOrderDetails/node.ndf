<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">flow</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">unknown</value>
          <value name="field_name">iterator</value>
          <value name="field_type">object</value>
          <value name="field_dim">0</value>
          <value name="field_opt">false</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="field_opt">false</value>
      <list name="rec_fields">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="field_name">LineItem</value>
          <value name="field_type">recref</value>
          <value name="field_dim">1</value>
          <value name="field_opt">false</value>
          <value name="rec_closed">false</value>
          <value name="rec_ref">sample.complexMapping.docTypes:LineItem</value>
        </record>
      </list>
      <value name="rec_closed">false</value>
    </record>
  </record>
  <value name="node_comment">====================================================================

     *** EXAMPLE CODE -- NOT INTENDED FOR PRODUCTION USE  ***

====================================================================

This service is an example of mapping line items via a node iterator.  The purpose of the service is
to build the detail Document of the purchase order.  The service performs the following
functionality:

1.    	Calls sample.complexMapping.largeDoc.messageBuilder:listToArray to create a new IData list
	in order to map every line item into it.
2.    	REPEAT (loop) over all line items until we get a successful exit or a failure.
2.1   	Calls sample.complexMapping.largeDoc.messageBuilder:getNextItem to load the next line item
2.1.1 	BRANCH on the value of each line item
2.1.1.1	If the line item at hand isn't empty then map it
2.1.1.2 If the line item is empty then we are done
2.2	Calls sample.complexMapping.largeDoc.messageBuilder:addToList to gather all the mapped lines
	in a link list.
3.	MAP: Drop everything we don't need
4.	Calls sample.complexMapping.largeDoc.messageBuilder:listToArray to convert the IData into an array





Do not run this service directly.  To run the example, you must execute the
sample.complexMapping.largeDoc.test:runComplexMapping service.

This service is provided as an example of one way that you might
accomplish this task. As a member of the WmSamples package, this
service is subject to modification or removal, without notice,
in future versions of the product.

This service is not a member of the webMethods library and should
not be used in a production solution.

====================================================================</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="check_internal_acls">no</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
</Values>
